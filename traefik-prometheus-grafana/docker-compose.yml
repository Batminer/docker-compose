---
version: '3.8'
services:
  traefik:
    container_name: traefik
    image: traefik:chevrotin
    restart: unless-stopped
    ports:
      - 80:80
      - 8080:8080
      - 8082:8082
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./conf/traefik.toml:/etc/traefik/traefik.toml:ro

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - datagrafana:/var/lib/grafana
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.grafana-http.rule: Host(`grafana.czs.local`)
      traefik.http.routers.grafana-http.entrypoints: web
      traefik.http.services.grafana.loadbalancer.server.port: 3000

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    command: --config.file=/etc/prometheus/prometheus.yml
    restart: unless-stopped
    volumes:
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - dataprometheus:/prometheus
    labels:
      traefik.enable: true
      traefik.http.routers.prometheus-http.rule: Host(`prometheus.czs.local`)
      traefik.http.routers.prometheus-http.entrypoints: web
      traefik.http.services.prometheus.loadbalancer.server.port: 9090

volumes:
  dataprometheus:
  datagrafana: